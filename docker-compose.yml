version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: go-auth-postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./migrations:/docker-entrypoint-initdb.d/migrations
    networks:
      - auth-network

  api:
    build: .
    container_name: go-auth-api
    ports:
      - "0.0.0.0:8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password123
      - DB_NAME=auth_db
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=8080
      - CHIRPSTACK_ENABLED=true
      - CHIRPSTACK_HOST=192.168.0.21
      - CHIRPSTACK_PORT=8090
      - CHIRPSTACK_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjaGlycHN0YWNrIiwiaXNzIjoiY2hpcnBzdGFjayIsInN1YiI6Ijg5MjIwOTc5LTI2NWYtNGYyOC1hYmIxLTBiMDNlOWQwMDA5MyIsInR5cCI6ImtleSJ9.BWpMBTWTFPNFPjrW-_ELN2-bK4VTKMeXQK6HkaijJaE
    depends_on:
      - postgres
    networks:
      - auth-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  auth-network:
    driver: bridge
